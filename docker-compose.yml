x-db-replica: &db-replica
  build:
    context: ./postgres
    dockerfile: replica.Dockerfile
  restart: always
  depends_on:
    - db_master
  environment:
    - PGPASSWORD=replicator_password

services:
  db_master:
    build:
      context: ./postgres
      dockerfile: master.Dockerfile
    container_name: 9999_db_master
    restart: always
    volumes:
      - 9999_postgres_master:/var/lib/postgresql/data

  db_replica_1:
    <<: *db-replica
    container_name: 9999_db_replica_1
    volumes:
      - 9999_postgres_replica_1:/var/lib/postgresql/data

  db_replica_2:
    <<: *db-replica
    container_name: 9999_db_replica_2
    volumes:
      - 9999_postgres_replica_2:/var/lib/postgresql/data

  server:
    build: .
    container_name: 9999_server
    platform: linux/amd64
    command: runserver
    restart: always
    volumes:
      - ./:/app/
    ports:
      - "8001:8000"
    depends_on:
      - db_master

  loadtest:
    build: .
    container_name: 9999_loadtest
    command: loadtest
    restart: always
    volumes:
      - ./locustfile.py:/app/locustfile.py
    ports:
      - "8089:8089"
    depends_on:
      - server

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: 9999_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - 9999_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "2222:9090"
    depends_on:
      - server

  grafana:
    image: grafana/grafana:11.2.0
    container_name: 9999_grafana
    volumes:
      - 9999_grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3333:3000"

volumes:
  9999_postgres_master:
  9999_postgres_replica_1:
  9999_postgres_replica_2:
  9999_prometheus_data:
  9999_grafana_data:
